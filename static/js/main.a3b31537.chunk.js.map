{"version":3,"sources":["datacard.js","warehouse-list.js","searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","city","space_available","cluster","className","WarehouseList","warehouses","map","item","key","id","searchBar","onChange","placeholder","type","App","useState","warehouseList","data","setData","e","query","result","Fuse","keys","search","finalResult","length","forEach","push","searchData","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4mFAoBeA,EAnBF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QACzC,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,kBAAf,SAAkCJ,MAEtC,sBAAKI,UAAU,iBAAf,UAAgC,mBAAGA,UAAU,0BAA7C,IAA2EH,KAC3E,sBAAKG,UAAU,kBAAf,UACI,iDACCF,KAEL,sBAAKE,UAAU,oBAAf,UACI,yCADJ,IACqBD,WCHtBE,G,MATO,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACpB,OACI,qBAAKF,UAAU,YAAf,SACKE,EAAWC,KAAI,SAACC,GAAD,OACZ,wBAAC,EAAD,2BAAUA,GAAV,IAAgBC,IAAKD,EAAKE,a,QCW3BC,G,MAfG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,YACzB,OACI,sBAAKT,UAAU,SAAf,UACF,sBAAMA,UAAU,aAAhB,SACE,cAAC,IAAD,MAEF,uBACEA,UAAU,cACVU,KAAK,OACLF,SAAUA,EACVC,YAAaA,SC2BNE,MAjCf,WAAgB,IAAD,EACaC,mBAASC,GADtB,mBACJC,EADI,KACEC,EADF,KAuBb,OACE,sBAAKf,UAAU,MAAf,UACI,oDACA,cAAC,EAAD,CAAWS,YAAY,SACvBD,SAAU,SAACQ,GAAD,OAzBK,SAACC,GACpB,GAAKA,EAAL,CAKA,IAIMC,EAJO,IAAIC,IAAKL,EAAM,CAC1BM,KAAM,CAAC,OAAQ,UAGGC,OAAOJ,GACrBK,EAAc,GAChBJ,EAAOK,QACTL,EAAOM,SAAQ,SAACpB,GACdkB,EAAYG,KAAKrB,EAAKA,SAExBW,EAAQO,IAERP,EAAQ,SAhBRA,EAAQF,GAuBWa,CAAWV,EAAEW,OAAOC,UACvC,cAAC,EAAD,CAAe1B,WAAYY,QCtBlBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3b31537.chunk.js","sourcesContent":["import \"./datacard.css\"\nconst Card = ({ name, city, space_available, cluster }) => {\n    return (\n        <div className=\"warehouse-card\">\n            <div className=\"ColDetail\">\n                <div className=\"Header\">\n                    <div className=\"warehouse-title\">{name}</div>\n                </div>\n                <div className=\"warehouse-city\"><i className=\"fas fa-map-marker-alt\"></i> {city}</div>\n                <div className=\"warehouse-space\">\n                    <b>Space Available:</b>\n                    {space_available}\n                </div>\n                <div className=\"warehouse-cluster\">\n                    <b>Cluster:</b> {cluster}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Card;","import Card from \"./datacard\"\nimport \"./warehouse-list.css\"\nconst WarehouseList = ({warehouses}) => {\n    return (\n        <div className=\"Container\">\n            {warehouses.map((item) => (\n                <Card {...item} key={item.id} />\n            ))}\n        </div>\n    )\n}\nexport default WarehouseList;","import { FaSearch } from \"react-icons/fa\";\nimport \"./searchbar.css\"\nconst searchBar = ({onChange,placeholder})=>{\n    return(\n        <div className=\"Search\">\n      <span className=\"SearchSpan\">\n        <FaSearch />\n      </span>\n      <input\n        className=\"SearchInput\"\n        type=\"text\"\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n    </div>\n    )\n}\nexport default searchBar;","import './App.css';\nimport Fuse from \"fuse.js\";\nimport warehouseList from \"./warehouses.json\"\nimport WarehouseList from \"./warehouse-list\"\nimport SearchBar from \"./searchbar\"\nimport {useState} from \"react\"\nfunction App() {\n    const [data, setData] = useState(warehouseList);\n    const searchData = (query) => {\n    if (!query) {\n      setData(warehouseList);\n      return;\n    }\n\n    const fuse = new Fuse(data, {\n      keys: [\"name\", \"city\"],\n    });\n\n    const result = fuse.search(query);\n    const finalResult = [];\n    if (result.length) {\n      result.forEach((item) => {\n        finalResult.push(item.item);\n      });\n      setData(finalResult);\n    } else {\n      setData([]);\n    }\n  };\n  return (\n    <div className=\"App\">\n        <h1>Warehouses Manager</h1>\n        <SearchBar placeholder=\"Search\"\n        onChange={(e) => searchData(e.target.value)} />\n      <WarehouseList warehouses={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}